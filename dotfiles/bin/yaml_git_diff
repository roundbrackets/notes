#!/usr/bin/env python3.10

import sys
import yaml
import subprocess
from deepdiff import DeepDiff

def get_git_file_content(file_path, revision='HEAD'):
    try:
        return subprocess.check_output(['git', 'show', f'{revision}:{file_path}']).decode('utf-8')
    except subprocess.CalledProcessError:
        print(f"Error: Unable to read {file_path} from git at revision {revision}")
        sys.exit(1)

def load_yaml_content(content):
    try:
        return yaml.safe_load(content)
    except yaml.YAMLError as e:
        print(f"Error parsing YAML: {e}")
        sys.exit(1)

def compare_yaml(file_path, committed_content, current_content):
    committed_yaml = load_yaml_content(committed_content)
    current_yaml = load_yaml_content(current_content)

    diff = DeepDiff(committed_yaml, current_yaml, ignore_order=True)

    if not diff:
        print(f"{file_path} No semantic differences found in YAML content.")
        return

    print(f"{file_path} Semantic differences in YAML content:")
    if 'dictionary_item_added' in diff:
        print("  Added items:")
        for item in diff['dictionary_item_added']:
            print(f"    + {item}")

    if 'dictionary_item_removed' in diff:
        print("  Removed items:")
        for item in diff['dictionary_item_removed']:
            print(f"    - {item}")

    if 'values_changed' in diff:
        print("  Changed values:")
        for item, change in diff['values_changed'].items():
            print(f"    ~ {item}")
            print(f"      From: {change['old_value']}")
            print(f"      To  : {change['new_value']}")

def main():
    if len(sys.argv) != 2:
        print("Usage: yaml_git_diff <file_path>")
        sys.exit(1)

    file_path = sys.argv[1]

    committed_content = get_git_file_content(file_path)
    with open(file_path, 'r') as file:
        current_content = file.read()

    compare_yaml(file_path, committed_content, current_content)

if __name__ == "__main__":
    main()
